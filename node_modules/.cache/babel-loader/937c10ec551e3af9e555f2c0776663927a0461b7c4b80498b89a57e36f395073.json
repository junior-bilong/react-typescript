{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch(\"http://localhost:3001/pokemons\").then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static deletePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static addPokemon(pokemon) {\n    // delete pokemon.created;\n\n    return fetch(`http://localhost:3001/pokemons`, {\n      method: 'POST',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static searchPokemon(term) {\n    return fetch(`http://localhost:3001/pokemons?q=${term}`).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n  static handleError(error) {\n    console.error(error);\n  }\n}","map":{"version":3,"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","headers","deletePokemon","addPokemon","searchPokemon","term","Object","keys","length","console"],"sources":["/home/junior/Desktop/pokemon-app/src/services/pokemon-service.ts"],"sourcesContent":["import Pokemon from \"../models/pokemon\";\n\n\nexport default class PokemonService {\n\n    static getPokemons(): Promise<Pokemon[]> {\n            return fetch(\"http://localhost:3001/pokemons\")\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n\n    static getPokemon(id: number): Promise<Pokemon|null> {\n        \n            return fetch(`http://localhost:3001/pokemons/${id}`)\n            .then(response => response.json())\n            .then(data => this.isEmpty(data) ? null : data)\n            .catch(error => this.handleError(error));\n    }\n\n    static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n            return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n            method: 'PUT',\n            body: JSON.stringify(pokemon),\n            headers: {'Content-Type' : 'application/json'}\n        })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    static deletePokemon(pokemon: Pokemon): Promise<{}> {\n        \n            return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n            method: 'DELETE',\n            headers: {'Content-Type' : 'application/json'}\n        })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n        // delete pokemon.created;\n         \n        \n            return fetch(`http://localhost:3001/pokemons`, {\n            method: 'POST',\n            body: JSON.stringify(pokemon),\n            headers: {'Content-Type' : 'application/json'}\n        })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    \n    }\n\n    static searchPokemon(term: string): Promise<Pokemon[]> {\n\n            return fetch(`http://localhost:3001/pokemons?q=${term}`)\n            .then (response => response.json())\n            .catch(error => this.handleError(error));\n    }\n\n    static isEmpty(data: Object): boolean {\n        return Object.keys(data).length === 0;\n    }\n\n    static handleError(error: Error) : void {\n        console.error(error)\n    }\n}"],"mappings":"AAGA,eAAe,MAAMA,cAAc,CAAC;EAEhC,OAAOC,WAAWA,CAAA,EAAuB;IACjC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAChD;EAEA,OAAOE,UAAUA,CAACC,EAAU,EAAyB;IAE7C,OAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAC,CAAC,CACnDP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACQ,IAAI,IAAI,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,GAAGA,IAAI,CAAC,CAC9CL,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAChD;EAEA,OAAOM,aAAaA,CAACC,OAAgB,EAAoB;IACjD,OAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAAC,EAAE;MAC7DK,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC7BK,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB;IACjD,CAAC,CAAC,CACDhB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC5C;EAEA,OAAOa,aAAaA,CAACN,OAAgB,EAAe;IAE5C,OAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAAC,EAAE;MAC7DK,MAAM,EAAE,QAAQ;MAChBI,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB;IACjD,CAAC,CAAC,CACDhB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC5C;EAEA,OAAOc,UAAUA,CAACP,OAAgB,EAAoB;IAClD;;IAGI,OAAOZ,KAAK,CAAE,gCAA+B,EAAE;MAC/Ca,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC7BK,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB;IACjD,CAAC,CAAC,CACDhB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAE5C;EAEA,OAAOe,aAAaA,CAACC,IAAY,EAAsB;IAE/C,OAAOrB,KAAK,CAAE,oCAAmCqB,IAAK,EAAC,CAAC,CACvDpB,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAClCC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAChD;EAEA,OAAOK,OAAOA,CAACD,IAAY,EAAW;IAClC,OAAOa,MAAM,CAACC,IAAI,CAACd,IAAI,CAAC,CAACe,MAAM,KAAK,CAAC;EACzC;EAEA,OAAOlB,WAAWA,CAACD,KAAY,EAAS;IACpCoB,OAAO,CAACpB,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}