{"ast":null,"code":"import _slicedToArray from\"/home/junior/Desktop/pokemon-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState}from\"react\";import'./pokemon-card.css';import formatDate from\"../helpers/format-date\";import formatType from\"../helpers/format-type\";import{useHistory}from\"react-router-dom\";// je declares le type pour type script\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PokemonCard=function PokemonCard(_ref){var pokemon=_ref.pokemon,_ref$borderColor=_ref.borderColor,borderColor=_ref$borderColor===void 0?'yellow':_ref$borderColor;var _useState=useState(),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];var history=useHistory();var showBorder=function showBorder(){setColor(borderColor);};var hideBorder=function hideBorder(){setColor(\"grey\");};var goToPokemon=function goToPokemon(id){history.push(\"/pokemons/\".concat(id));};return/*#__PURE__*/_jsx(\"div\",{className:\"col s6 m4\",onClick:function onClick(){return goToPokemon(pokemon.id);},onMouseEnter:showBorder,onMouseLeave:hideBorder,children:/*#__PURE__*/_jsxs(\"div\",{className:\"card horizontal\",style:{borderColor:color},children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-image\",children:/*#__PURE__*/_jsx(\"img\",{src:pokemon.picture,alt:pokemon.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-stacked\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:pokemon.name}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"small\",{children:formatDate(pokemon.created)})}),pokemon.types.map(function(type){return/*#__PURE__*/_jsx(\"span\",{className:formatType(type),children:type},type);})]})})]})});};export default PokemonCard;","map":{"version":3,"names":["React","useState","formatDate","formatType","useHistory","jsx","_jsx","jsxs","_jsxs","PokemonCard","_ref","pokemon","_ref$borderColor","borderColor","_useState","_useState2","_slicedToArray","color","setColor","history","showBorder","hideBorder","goToPokemon","id","push","concat","className","onClick","onMouseEnter","onMouseLeave","children","style","src","picture","alt","name","created","types","map","type"],"sources":["/home/junior/Desktop/pokemon-app/src/components/pokemon-card.tsx"],"sourcesContent":["import React, {FunctionComponent} from \"react\";\nimport { useState } from \"react\";\nimport Pokemon from \"../models/pokemon\";\nimport './pokemon-card.css';\nimport formatDate  from \"../helpers/format-date\";\nimport formatType from \"../helpers/format-type\";\nimport { useHistory } from \"react-router-dom\";\n\n// je declares le type pour type script\ntype  Props = {\n    pokemon : Pokemon;\n    borderColor?: string\n};\n\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = 'yellow'}) => {\n    const [color, setColor] = useState<string>()\n\n    const history = useHistory();\n\n    const showBorder = () => {\n        setColor(borderColor);\n    }\n\n    const hideBorder = () => {\n        setColor(\"grey\");\n    }\n \n    const goToPokemon = (id: number) => {\n        history.push(`/pokemons/${id}`)\n    }\n    \n    return (\n        <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n            <div className=\"card horizontal\" style = {{ borderColor : color}}>\n                <div className=\"card-image\">\n                    <img src= {pokemon.picture} alt= {pokemon.name} />\n                </div>\n                <div className=\"card-stacked\">\n                    <div className=\"card-content\">\n                        <p>{pokemon.name}</p>\n                        <p><small>{formatDate(pokemon.created)}</small></p>\n                        {pokemon.types.map(type => (\n                            <span key = {type} className={formatType(type)}>{type}</span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    ); \n}\n\nexport default PokemonCard;"],"mappings":"sHAAA,MAAO,CAAAA,KAAK,KAA2B,OAAO,CAC9C,OAASC,QAAQ,KAAQ,OAAO,CAEhC,MAAO,oBAAoB,CAC3B,MAAO,CAAAC,UAAU,KAAO,wBAAwB,CAChD,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAC/C,OAASC,UAAU,KAAQ,kBAAkB,CAE7C;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAOA,GAAM,CAAAC,WAAqC,CAAG,QAAxC,CAAAA,WAAqCA,CAAAC,IAAA,CAA0C,IAArC,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CAAAC,gBAAA,CAAAF,IAAA,CAAEG,WAAW,CAAXA,WAAW,CAAAD,gBAAA,UAAG,QAAQ,CAAAA,gBAAA,CAC3E,IAAAE,SAAA,CAA0Bb,QAAQ,CAAS,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAEtB,GAAM,CAAAI,OAAO,CAAGf,UAAU,CAAC,CAAC,CAE5B,GAAM,CAAAgB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACrBF,QAAQ,CAACL,WAAW,CAAC,CACzB,CAAC,CAED,GAAM,CAAAQ,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACrBH,QAAQ,CAAC,MAAM,CAAC,CACpB,CAAC,CAED,GAAM,CAAAI,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,EAAU,CAAK,CAChCJ,OAAO,CAACK,IAAI,cAAAC,MAAA,CAAcF,EAAE,CAAE,CAAC,CACnC,CAAC,CAED,mBACIjB,IAAA,QAAKoB,SAAS,CAAC,WAAW,CAACC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAL,WAAW,CAACX,OAAO,CAACY,EAAE,CAAC,EAAC,CAACK,YAAY,CAAER,UAAW,CAACS,YAAY,CAAER,UAAW,CAAAS,QAAA,cAClHtB,KAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAACK,KAAK,CAAI,CAAElB,WAAW,CAAGI,KAAK,CAAE,CAAAa,QAAA,eAC7DxB,IAAA,QAAKoB,SAAS,CAAC,YAAY,CAAAI,QAAA,cACvBxB,IAAA,QAAK0B,GAAG,CAAGrB,OAAO,CAACsB,OAAQ,CAACC,GAAG,CAAGvB,OAAO,CAACwB,IAAK,CAAE,CAAC,CACjD,CAAC,cACN7B,IAAA,QAAKoB,SAAS,CAAC,cAAc,CAAAI,QAAA,cACzBtB,KAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAI,QAAA,eACzBxB,IAAA,MAAAwB,QAAA,CAAInB,OAAO,CAACwB,IAAI,CAAI,CAAC,cACrB7B,IAAA,MAAAwB,QAAA,cAAGxB,IAAA,UAAAwB,QAAA,CAAQ5B,UAAU,CAACS,OAAO,CAACyB,OAAO,CAAC,CAAQ,CAAC,CAAG,CAAC,CAClDzB,OAAO,CAAC0B,KAAK,CAACC,GAAG,CAAC,SAAAC,IAAI,qBACnBjC,IAAA,SAAmBoB,SAAS,CAAEvB,UAAU,CAACoC,IAAI,CAAE,CAAAT,QAAA,CAAES,IAAI,EAAxCA,IAA+C,CAAC,EAChE,CAAC,EACD,CAAC,CACL,CAAC,EACL,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAA9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}