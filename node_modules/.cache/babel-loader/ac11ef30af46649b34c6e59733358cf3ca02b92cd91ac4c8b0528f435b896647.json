{"ast":null,"code":"var _jsxFileName = \"/home/junior/Desktop/pokemon-app/src/components/pokemon-card.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport './pokemon-card.css';\nimport formatDate from \"../helpers/format-date\";\nimport formatType from \"../helpers/format-type\";\nimport { useHistory } from \"react-router-dom\";\n\n// je declares le type pour type script\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = _ref => {\n  _s();\n  let {\n    pokemon,\n    borderColor = 'yellow'\n  } = _ref;\n  const [color, setColor] = useState();\n  const history = useHistory();\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n  const hideBorder = () => {\n    setColor(\"grey\");\n  };\n  const goToPokemon = id => {\n    history.push(`/pokemons/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onClick: () => goToPokemon(pokemon.id),\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: formatType(type),\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonCard, \"nmprnW86+m0r42mJ5w56oVai7yE=\", false, function () {\n  return [useHistory];\n});\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","formatDate","formatType","useHistory","jsxDEV","_jsxDEV","PokemonCard","_ref","_s","pokemon","borderColor","color","setColor","history","showBorder","hideBorder","goToPokemon","id","push","className","onClick","onMouseEnter","onMouseLeave","children","style","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","created","types","map","type","_c","$RefreshReg$"],"sources":["/home/junior/Desktop/pokemon-app/src/components/pokemon-card.tsx"],"sourcesContent":["import React, {FunctionComponent} from \"react\";\nimport { useState } from \"react\";\nimport Pokemon from \"../models/pokemon\";\nimport './pokemon-card.css';\nimport formatDate  from \"../helpers/format-date\";\nimport formatType from \"../helpers/format-type\";\nimport { useHistory } from \"react-router-dom\";\n\n// je declares le type pour type script\ntype  Props = {\n    pokemon : Pokemon;\n    borderColor?: string\n};\n\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = 'yellow'}) => {\n    const [color, setColor] = useState<string>()\n\n    const history = useHistory();\n\n    const showBorder = () => {\n        setColor(borderColor);\n    }\n\n    const hideBorder = () => {\n        setColor(\"grey\");\n    }\n \n    const goToPokemon = (id: number) => {\n        history.push(`/pokemons/${id}`)\n    }\n    \n    return (\n        <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n            <div className=\"card horizontal\" style = {{ borderColor : color}}>\n                <div className=\"card-image\">\n                    <img src= {pokemon.picture} alt= {pokemon.name} />\n                </div>\n                <div className=\"card-stacked\">\n                    <div className=\"card-content\">\n                        <p>{pokemon.name}</p>\n                        <p><small>{formatDate(pokemon.created)}</small></p>\n                        {pokemon.types.map(type => (\n                            <span key = {type} className={formatType(type)}>{type}</span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    ); \n}\n\nexport default PokemonCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}